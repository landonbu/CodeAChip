`define ROW_BITWIDTH 20
`define COLUMN_BITWIDTH 20
`define PIXEL_BITWIDTH 255

// Compares two variable dim 2d arrays by subtracting and counting the 1's in the outputs array
module array_comparison(input logic [ROW_BITWIDTH-1:0] [COLUMN_BITWIDTH-1:0] [PIXEL_BITWIDTH-1:0] sensor_data0, input logic [ROW_BITWIDTH-1:0]
                        [COLUMN_BITWIDTH-1:0] [PIXEL_BITWIDTH-1:0] sensor_data1, output logic [5:0] diff_count);
  logic [ROW_BITWIDTH-1:0] [COLUMN_BITWIDTH-1:0] diff_matrix;
  
  integer i;
  integer j;
  integer k;
    
  always_comb begin : difference_calc   // Subtraction of two variable 2d sized arrays into a 2d output array and adds 1's to diff_count
        for (i = 0; i < ROW_BITWIDTH; i = i + 1) begin : ROW_LOOP
            for (j = 0; j < COLUMN_BITWIDTH; j = j + 1) begin : COLUMN_LOOP
                for(k = 0; k < PIXEL_BITWIDTH; k = k + 1) begin: PIXEL_BITWIDTH_LOOP
                    difference[i][j][k] = sensor_data0[i][j][k] - sensor_data1[i][j][k];
                    if (difference[i][j][k]) begin
                        diff_count > thresh;    // Define threshold above. Min = 0; Max = PIXEL_BITWIDTH
                    end
                end
            end
        end
    end

endmodule